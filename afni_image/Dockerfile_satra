# Generated by Neurodocker v0.2.0-dev.
#
# Thank you for using Neurodocker. If you discover any issues 
# or ways to improve this software, please submit an issue or 
# pull request on our GitHub repository:
#     https://github.com/kaczmarj/neurodocker
#
# Timestamp: 2017-07-27 00:05:05

FROM debian:jessie

ARG DEBIAN_FRONTEND=noninteractive

#----------------------------
# Install common dependencies
#----------------------------
RUN apt-get update -qq && apt-get install -yq --no-install-recommends bzip2 ca-certificates curl unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && mkdir /opt/conda && chmod 777 /opt/conda

#--------------------
# Install AFNI latest
#--------------------
RUN apt-get update -qq && apt-get install -yq --no-install-recommends gsl-bin libglu1-mesa-dev libglib2.0-0 libglw1-mesa libgomp1 \
    libjpeg62 libxm4 netpbm tcsh xfonts-base xvfb \
    && ln /usr/lib/x86_64-linux-gnu/libgsl.so.19 /usr/lib/x86_64-linux-gnu/libgsl.so.0 \
    || true \
    && apt-get install -yq libxp6 \
    || /bin/bash -c " \
       curl -o /tmp/libxp6.deb -sSL http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \
       && dpkg -i /tmp/libxp6.deb && rm -f /tmp/libxp6.deb" \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && echo "Downloading AFNI ..." \
    && mkdir -p /opt/afni \
    && curl -sSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
    | tar zx -C /opt/afni --strip-components=1 \
    && cp /opt/afni/AFNI.afnirc $HOME/.afnirc \
    && cp /opt/afni/AFNI.sumarc $HOME/.sumarc
ENV PATH=/opt/afni:$PATH

#-----------------------------------------------------------------------------
# 3. Install FreeSurfer v6.0, minimized with reprozip
#    (https://github.com/freesurfer/freesurfer/issues/70):
#-----------------------------------------------------------------------------
USER $NB_USER
WORKDIR /opt
RUN curl -sSL https://dl.dropbox.com/s/pbaisn6m5qpi9uu/recon-all-freesurfer6-2.min.tgz?dl=0 | tar zx -C /opt  && \
 ( echo "cHJpbnRmICJrcnp5c3p0b2YuZ29yZ29sZXdza2lAZ21haWwuY29tXG41MTcyXG4gKkN2dW12RVYzelRmZ1xuRlM1Si8yYzFhZ2c0RVxuIiA+IC9vcHQvZnJlZXN1cmZlci9saWNlbnNlLnR4dAo=" | base64 -d | sh )
ENV FS_OVERRIDE=0 \
    OS=Linux \
    FSF_OUTPUT_FORMAT=nii.gz \
    FIX_VERTEX_AREA=\
    FREESURFER_HOME=/opt/freesurfer
ENV MNI_DIR=$FREESURFER_HOME/mni \
    SUBJECTS_DIR=/subjects
ENV PERL5LIB=$MNI_DIR/share/perl5 \
    MNI_PERL5LIB=$MNI_DIR/share/perl5 \
    MINC_BIN_DIR=$MNI_DIR/bin \
    MINC_LIB_DIR=$MNI_DIR/lib \
    MNI_DATAPATH=$MNI_DIR/data
ENV PATH=$FREESURFER_HOME/bin:$FREESURFER_HOME/tktools:$MINC_BIN_DIR:$PATH

#---------------------------
# Add NeuroDebian repository
#---------------------------
RUN apt-get update -qq && apt-get install -yq --no-install-recommends dirmngr \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && curl -sSL http://neuro.debian.net/lists/jessie.us-nh.full \
    > /etc/apt/sources.list.d/neurodebian.sources.list \
    && apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9 \
    && apt-get update \
    && apt-get purge -y --auto-remove dirmngr

# Install NeuroDebian packages
RUN apt-get update -qq && apt-get install -yq --no-install-recommends dcm2niix convert3d ants fsl graphviz libpng12-0 tree sudo \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#----------------------
# Install MCR and SPM12
#----------------------
# Install required libraries
RUN apt-get update -qq && apt-get install -yq --no-install-recommends libxext6 libxt6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install MATLAB Compiler Runtime
WORKDIR /opt
RUN echo "Downloading MATLAB Compiler Runtime ..." \
    && curl -sSL -o mcr.zip https://www.mathworks.com/supportfiles/downloads/R2017a/deployment_files/R2017a/installers/glnxa64/MCR_R2017a_glnxa64_installer.zip \
    && unzip -q mcr.zip -d mcrtmp \
    && mcrtmp/install -destinationFolder /opt/mcr -mode silent -agreeToLicense yes \
    && rm -rf mcrtmp mcr.zip /tmp/*

# Install standalone SPM
WORKDIR /opt
RUN echo "Downloading standalone SPM ..." \
    && curl -sSL -o spm.zip http://www.fil.ion.ucl.ac.uk/spm/download/restricted/utopia/dev/spm12_latest_Linux_R2017a.zip \
    && unzip -q spm.zip \
    && rm -rf spm.zip
ENV MATLABCMD=/opt/mcr/v92/toolbox/matlab \
    SPMMCRCMD="/opt/spm12/run_spm12.sh /opt/mcr/v92/ script" \
    FORCE_SPMMCR=1 \
    LD_LIBRARY_PATH=/opt/mcr/v92/runtime/glnxa64:/opt/mcr/v92/bin/glnxa64:/opt/mcr/v*/sys/os/glnxa64:$LD_LIBRARY_PATH

EXPOSE 8888

# Create new user: neuro
RUN useradd --no-user-group --create-home --shell /bin/bash neuro && adduser neuro sudo
USER neuro

#------------------
# Install Miniconda
#------------------
ENV CONDA_DIR=/opt/conda \
    PATH=/opt/conda/bin:$PATH
RUN echo "Downloading Miniconda installer ..." \
    && miniconda_installer=/tmp/miniconda.sh \
    && curl -sSL -o $miniconda_installer https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && /bin/bash $miniconda_installer -f -b -p $CONDA_DIR \
    && rm -f $miniconda_installer \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && conda update -y --all \
    && conda clean -tipsy

#-------------------------
# Create conda environment
#-------------------------
RUN conda create -y -q --name neuro python=3.6 \
    	jupyter jupyterlab traits pandas matplotlib scikit-learn \
    && conda clean -tipsy \
    && /bin/bash -c "source activate neuro \
    	&& pip install -q --no-cache-dir \
    	https://github.com/nipy/nipype/tarball/master nilearn bids"
ENV PATH=/opt/conda/envs/neuro/bin:$PATH

# User-defined instruction
RUN mkdir -p -m 700 ~/.jupyter/ && echo "c.NotebookApp.ip = '*'" >> ~/.jupyter/jupyter_notebook_config.py

ADD startup.sh /home/neuro/startup.sh

USER root
RUN chmod -R o+rwx /opt/spm12
USER neuro
RUN conda create -y -q --name afni27 python=2.7

ENTRYPOINT ["bash", "/home/neuro/startup.sh"]

